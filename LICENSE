<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aviator Game - Play & Win</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #1a2a6c, #b21f1f, #1a2a6c);
            color: #fff;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            overflow-x: hidden;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            margin-bottom: 30px;
        }
        
        .logo {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .logo i {
            font-size: 2.5rem;
            color: #ffcc00;
        }
        
        .logo h1 {
            font-size: 1.8rem;
            background: linear-gradient(to right, #ffcc00, #ff9900);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 0 0 10px rgba(255, 204, 0, 0.3);
        }
        
        .user-section {
            display: flex;
            gap: 15px;
            align-items: center;
        }
        
        .btn {
            background: linear-gradient(45deg, #ff8c00, #ffcc00);
            color: #1a1a2e;
            border: none;
            padding: 10px 20px;
            border-radius: 30px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }
        
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
        }
        
        .balance {
            background: rgba(0, 0, 0, 0.3);
            padding: 8px 15px;
            border-radius: 20px;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .balance i {
            color: #ffcc00;
        }
        
        .main-content {
            display: flex;
            gap: 30px;
            margin-bottom: 30px;
        }
        
        .game-area {
            flex: 3;
            background: rgba(0, 0, 0, 0.4);
            border-radius: 20px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            position: relative;
            overflow: hidden;
        }
        
        .game-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }
        
        .multiplier-display {
            font-size: 4rem;
            font-weight: 800;
            text-align: center;
            margin: 30px 0;
            text-shadow: 0 0 15px rgba(255, 204, 0, 0.8);
            transition: all 0.2s ease;
        }
        
        .game-canvas {
            height: 250px;
            background: linear-gradient(to bottom, #0f3460, #1a1a2e);
            border-radius: 15px;
            margin: 20px 0;
            position: relative;
            overflow: hidden;
            border: 2px solid #355c7d;
        }
        
        .airplane {
            position: absolute;
            bottom: 30px;
            left: 50px;
            font-size: 3rem;
            transform: rotate(0deg);
            transition: all 0.1s linear;
            color: #ffcc00;
            z-index: 10;
        }
        
        .trail {
            position: absolute;
            bottom: 55px;
            left: 100px;
            width: 0;
            height: 3px;
            background: linear-gradient(to right, rgba(255, 204, 0, 0.8), transparent);
            border-radius: 50%;
        }
        
        .cloud {
            position: absolute;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 50%;
            filter: blur(5px);
        }
        
        .controls {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin-top: 20px;
        }
        
        .bet-controls {
            display: flex;
            gap: 10px;
        }
        
        .bet-input {
            flex: 1;
            padding: 15px;
            border-radius: 10px;
            border: 2px solid #355c7d;
            background: rgba(0, 0, 0, 0.3);
            color: white;
            font-size: 1.1rem;
        }
        
        .bet-btn {
            background: linear-gradient(45deg, #00c853, #009624);
            font-weight: bold;
            font-size: 1.1rem;
            padding: 0 25px;
        }
        
        .cashout-btn {
            background: linear-gradient(45deg, #ff3d00, #dd2c00);
            font-weight: bold;
            font-size: 1.2rem;
            padding: 15px;
            display: none;
        }
        
        .stats-panel {
            flex: 1;
            background: rgba(0, 0, 0, 0.4);
            border-radius: 20px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            display: flex;
            flex-direction: column;
        }
        
        .panel-title {
            font-size: 1.5rem;
            margin-bottom: 20px;
            color: #ffcc00;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 15px;
            margin-bottom: 20px;
        }
        
        .stat-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 15px;
            text-align: center;
        }
        
        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            margin: 10px 0;
            color: #ffcc00;
        }
        
        .stat-label {
            font-size: 0.9rem;
            opacity: 0.8;
        }
        
        .deposit-section {
            background: rgba(0, 0, 0, 0.4);
            border-radius: 20px;
            padding: 25px;
            margin-top: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        }
        
        .payment-options {
            display: flex;
            justify-content: space-between;
            gap: 15px;
            margin-top: 20px;
        }
        
        .payment-option {
            flex: 1;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .payment-option:hover {
            transform: translateY(-5px);
            background: rgba(255, 255, 255, 0.15);
        }
        
        .payment-option i {
            font-size: 3rem;
            margin-bottom: 15px;
        }
        
        .payment-option.jazzcash i {
            color: #00a651;
        }
        
        .payment-option.easypaisa i {
            color: #ff6b00;
        }
        
        .payment-option.wallet i {
            color: #ffcc00;
        }
        
        .payment-option h3 {
            margin-bottom: 10px;
        }
        
        .auth-modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            backdrop-filter: blur(5px);
        }
        
        .auth-box {
            background: linear-gradient(135deg, #1a2a6c, #1a1a2e);
            width: 100%;
            max-width: 400px;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 15px 50px rgba(0, 0, 0, 0.5);
        }
        
        .auth-header {
            background: rgba(0, 0, 0, 0.3);
            padding: 20px;
            text-align: center;
            position: relative;
        }
        
        .auth-tabs {
            display: flex;
            margin-top: 20px;
        }
        
        .auth-tab {
            flex: 1;
            padding: 15px;
            text-align: center;
            background: rgba(255, 255, 255, 0.1);
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .auth-tab.active {
            background: linear-gradient(45deg, #ff8c00, #ffcc00);
            color: #1a1a2e;
            font-weight: 600;
        }
        
        .auth-body {
            padding: 30px;
        }
        
        .auth-form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }
        
        .input-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }
        
        .input-group label {
            font-weight: 500;
        }
        
        .input-group input {
            padding: 15px;
            border-radius: 10px;
            border: 2px solid #355c7d;
            background: rgba(0, 0, 0, 0.3);
            color: white;
            font-size: 1rem;
        }
        
        .submit-btn {
            background: linear-gradient(45deg, #ff8c00, #ffcc00);
            color: #1a1a2e;
            border: none;
            padding: 15px;
            border-radius: 10px;
            font-weight: 600;
            font-size: 1.1rem;
            cursor: pointer;
            margin-top: 10px;
        }
        
        .close-auth {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 1.5rem;
            cursor: pointer;
            color: #ffcc00;
        }
        
        .history {
            margin-top: 10px;
            max-height: 150px;
            overflow-y: auto;
            flex-grow: 1;
        }
        
        .history-item {
            display: flex;
            justify-content: space-between;
            padding: 10px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .win {
            color: #00c853;
        }
        
        .loss {
            color: #ff3d00;
        }
        
        .footer {
            text-align: center;
            padding: 20px;
            margin-top: auto;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            font-size: 0.9rem;
            opacity: 0.7;
        }
        
        /* QR Code Modal */
        .qr-modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            backdrop-filter: blur(5px);
        }
        
        .qr-box {
            background: linear-gradient(135deg, #1a2a6c, #1a1a2e);
            width: 100%;
            max-width: 300px;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 15px 50px rgba(0, 0, 0, 0.5);
            padding: 25px;
            text-align: center;
        }
        
        .qr-code {
            width: 200px;
            height: 200px;
            margin: 20px auto;
            background: white;
            padding: 10px;
            border-radius: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 5rem;
        }
        
        .qr-details {
            margin: 20px 0;
            text-align: center;
        }
        
        .qr-name {
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .qr-number {
            opacity: 0.8;
            margin-bottom: 15px;
        }
        
        .qr-share {
            background: linear-gradient(45deg, #2196f3, #1976d2);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 30px;
            font-weight: 600;
            cursor: pointer;
            margin-top: 10px;
        }
        
        .qr-or {
            margin: 15px 0;
            position: relative;
        }
        
        .qr-or::before, .qr-or::after {
            content: "";
            position: absolute;
            height: 1px;
            width: 40%;
            background: rgba(255, 255, 255, 0.2);
            top: 50%;
        }
        
        .qr-or::before {
            left: 0;
        }
        
        .qr-or::after {
            right: 0;
        }
        
        .qr-footer {
            display: flex;
            justify-content: space-around;
            margin-top: 20px;
        }
        
        .qr-footer-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 5px;
            font-size: 0.8rem;
            opacity: 0.8;
        }
        
        /* Deposit Verification Modal */
        .verify-modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            backdrop-filter: blur(5px);
        }
        
        .verify-box {
            background: linear-gradient(135deg, #1a2a6c, #1a1a2e);
            width: 100%;
            max-width: 400px;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 15px 50px rgba(0, 0, 0, 0.5);
            padding: 25px;
        }
        
        .verify-title {
            font-size: 1.5rem;
            margin-bottom: 20px;
            text-align: center;
            color: #ffcc00;
        }
        
        .verify-form {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }
        
        .verify-submit {
            background: linear-gradient(45deg, #00c853, #009624);
            color: white;
            border: none;
            padding: 15px;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            margin-top: 10px;
        }
        
        .withdraw-section {
            background: rgba(0, 0, 0, 0.4);
            border-radius: 20px;
            padding: 25px;
            margin-top: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        }
        
        .withdraw-form {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin-top: 20px;
        }
        
        .withdraw-btn {
            background: linear-gradient(45deg, #2196f3, #1976d2);
            color: white;
            border: none;
            padding: 15px;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            margin-top: 10px;
        }
        
        .user-profile {
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
            padding: 5px 15px;
            border-radius: 20px;
            background: rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
        }
        
        .user-profile:hover {
            background: rgba(0, 0, 0, 0.5);
        }
        
        .user-profile i {
            font-size: 1.2rem;
            color: #ffcc00;
        }
        
        .profile-modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            backdrop-filter: blur(5px);
        }
        
        .profile-box {
            background: linear-gradient(135deg, #1a2a6c, #1a1a2e);
            width: 100%;
            max-width: 500px;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 15px 50px rgba(0, 0, 0, 0.5);
            padding: 30px;
        }
        
        .profile-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .profile-title {
            font-size: 1.8rem;
            color: #ffcc00;
        }
        
        .close-profile {
            font-size: 1.5rem;
            cursor: pointer;
            color: #ffcc00;
        }
        
        .profile-info {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin-bottom: 25px;
        }
        
        .info-item {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .info-label {
            font-weight: 600;
            color: #ffcc00;
        }
        
        .withdraw-history {
            max-height: 300px;
            overflow-y: auto;
        }
        
        .history-header {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            font-weight: 600;
            border-bottom: 2px solid rgba(255, 255, 255, 0.2);
        }
        
        .withdraw-item {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .completed {
            color: #00c853;
        }
        
        .pending {
            color: #ffcc00;
        }
        
        @media (max-width: 768px) {
            .main-content {
                flex-direction: column;
            }
            
            .payment-options {
                flex-direction: column;
            }
            
            .stats-grid {
                grid-template-columns: 1fr;
            }
            
            .qr-box {
                max-width: 90%;
            }
            
            .user-section {
                flex-direction: column;
                align-items: flex-end;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="logo">
                <i class="fas fa-plane"></i>
                <h1>Aviator</h1>
            </div>
            <div class="user-section">
                <div class="balance">
                    <i class="fas fa-coins"></i>
                    <span id="balance-amount">0.00</span>
                </div>
                <div class="user-profile" id="user-profile" style="display: none;">
                    <i class="fas fa-user"></i>
                    <span id="username-display">Guest</span>
                </div>
                <button class="btn" id="login-btn">
                    <i class="fas fa-user"></i> Login
                </button>
            </div>
        </header>
        
        <div class="main-content">
            <div class="game-area">
                <div class="game-header">
                    <h2><i class="fas fa-gamepad"></i> Game Area</h2>
                    <div class="balance">
                        <i class="fas fa-coins"></i>
                        <span id="game-balance">0.00</span>
                    </div>
                </div>
                
                <div class="multiplier-display" id="multiplier">1.00x</div>
                
                <div class="game-canvas" id="game-canvas">
                    <div class="airplane" id="airplane">✈</div>
                </div>
                
                <div class="controls">
                    <div class="bet-controls">
                        <input type="number" class="bet-input" id="bet-amount" placeholder="Enter bet amount" value="100">
                        <button class="btn bet-btn" id="place-bet">
                            <i class="fas fa-play"></i> Place Bet
                        </button>
                    </div>
                    <button class="btn cashout-btn" id="cash-out">
                        <i class="fas fa-money-bill-wave"></i> Cash Out
                    </button>
                </div>
            </div>
            
            <div class="stats-panel">
                <h2 class="panel-title"><i class="fas fa-chart-line"></i> Game Stats</h2>
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-value" id="highest-win">0.00x</div>
                        <div class="stat-label">Highest Win</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" id="total-bets">0</div>
                        <div class="stat-label">Total Bets</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" id="total-wins">0</div>
                        <div class="stat-label">Total Wins</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" id="win-rate">0%</div>
                        <div class="stat-label">Win Rate</div>
                    </div>
                </div>
                
                <div class="history">
                    <h3 style="margin: 15px 0 10px;"><i class="fas fa-history"></i> Recent Games</h3>
                    <div id="history-items">
                        <!-- History items will be added dynamically -->
                    </div>
                </div>
            </div>
        </div>
        
        <div class="deposit-section">
            <h2 class="panel-title"><i class="fas fa-wallet"></i> Deposit Funds</h2>
            <div class="payment-options">
                <div class="payment-option jazzcash" id="jazzcash-btn">
                    <i class="fas fa-mobile-alt"></i>
                    <h3>JazzCash</h3>
                    <p>Account: 03190010769</p>
                </div>
                <div class="payment-option easypaisa" id="easypaisa-btn">
                    <i class="fas fa-money-bill-wave"></i>
                    <h3>EasyPaisa</h3>
                    <p>Fast and secure transactions</p>
                </div>
                <div class="payment-option wallet" id="wallet-btn">
                    <i class="fas fa-wallet"></i>
                    <h3>Wallet</h3>
                    <p>Use your game wallet</p>
                </div>
            </div>
        </div>
        
        <div class="withdraw-section">
            <h2 class="panel-title"><i class="fas fa-money-check"></i> Withdraw Funds</h2>
            <form class="withdraw-form" id="withdraw-form">
                <div class="input-group">
                    <label for="withdraw-amount">Amount (PKR)</label>
                    <input type="number" id="withdraw-amount" placeholder="Enter amount" required>
                </div>
                <div class="input-group">
                    <label for="full-name">Full Name</label>
                    <input type="text" id="full-name" placeholder="Enter your full name" required>
                </div>
                <div class="input-group">
                    <label for="account-number">Account Number</label>
                    <input type="text" id="account-number" placeholder="Enter account number" required>
                </div>
                <div class="input-group">
                    <label for="cnic-number">CNIC Number</label>
                    <input type="text" id="cnic-number" placeholder="Enter CNIC number" required>
                </div>
                <button type="submit" class="withdraw-btn">
                    <i class="fas fa-paper-plane"></i> Request Withdrawal
                </button>
            </form>
        </div>
    </div>
    
    <!-- Auth Modal -->
    <div class="auth-modal" id="auth-modal" style="display: none;">
        <div class="auth-box">
            <div class="auth-header">
                <h2>Welcome to Aviator</h2>
                <div class="close-auth" id="close-auth">
                    <i class="fas fa-times"></i>
                </div>
                <div class="auth-tabs">
                    <div class="auth-tab active" id="login-tab">Login</div>
                    <div class="auth-tab" id="signup-tab">Sign Up</div>
                </div>
            </div>
            <div class="auth-body">
                <form class="auth-form" id="login-form">
                    <div class="input-group">
                        <label for="username">Username</label>
                        <input type="text" id="username" placeholder="Enter your username" required>
                    </div>
                    <div class="input-group">
                        <label for="password">Password</label>
                        <input type="password" id="password" placeholder="Enter your password" required>
                    </div>
                    <button type="submit" class="submit-btn">Login to Account</button>
                </form>
                
                <form class="auth-form" id="signup-form" style="display: none;">
                    <div class="input-group">
                        <label for="signup-username">Username</label>
                        <input type="text" id="signup-username" placeholder="Choose a username" required>
                    </div>
                    <div class="input-group">
                        <label for="signup-email">Email</label>
                        <input type="email" id="signup-email" placeholder="Enter your email" required>
                    </div>
                    <div class="input-group">
                        <label for="signup-mobile">Mobile Number</label>
                        <input type="tel" id="signup-mobile" placeholder="03XX-XXXXXXX" required>
                    </div>
                    <div class="input-group">
                        <label for="signup-password">Password</label>
                        <input type="password" id="signup-password" placeholder="Create a password" required>
                    </div>
                    <div class="input-group">
                        <label for="signup-confirm">Confirm Password</label>
                        <input type="password" id="signup-confirm" placeholder="Confirm your password" required>
                    </div>
                    <button type="submit" class="submit-btn">Create Account</button>
                </form>
            </div>
        </div>
    </div>
    
    <!-- QR Code Modal -->
    <div class="qr-modal" id="qr-modal" style="display: none;">
        <div class="qr-box">
            <h2>Scan QR</h2>
            <div class="qr-details">
                <div class="qr-name">My QR</div>
                <div class="qr-number">Ashfaq Muhammad 0769</div>
            </div>
            <div class="qr-code">
                <i class="fas fa-qrcode"></i>
            </div>
            <button class="qr-share" id="share-qr">
                <i class="fas fa-share"></i> Share
            </button>
            <div class="qr-or">OR</div>
            <div>Generate QR</div>
            <div class="qr-footer">
                <div class="qr-footer-item">
                    <i class="fas fa-home"></i>
                    <span>Home</span>
                </div>
                <div class="qr-footer-item">
                    <i class="fas fa-user-tie"></i>
                    <span>Agent</span>
                </div>
                <div class="qr-footer-item">
                    <i class="fas fa-star"></i>
                    <span>Favorites</span>
                </div>
                <div class="qr-footer-item">
                    <i class="fas fa-bullhorn"></i>
                    <span>Promotions</span>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Deposit Verification Modal -->
    <div class="verify-modal" id="verify-modal" style="display: none;">
        <div class="verify-box">
            <h2 class="verify-title">Verify Deposit</h2>
            <form class="verify-form" id="verify-form">
                <div class="input-group">
                    <label for="deposit-amount">Deposit Amount (PKR)</label>
                    <input type="number" id="deposit-amount" placeholder="Enter amount" required>
                </div>
                <div class="input-group">
                    <label for="transaction-id">Transaction ID</label>
                    <input type="text" id="transaction-id" placeholder="Enter transaction ID" required>
                </div>
                <div class="input-group">
                    <label for="payment-method">Payment Method</label>
                    <input type="text" id="payment-method" readonly value="JazzCash">
                </div>
                <button type="submit" class="verify-submit">Verify Deposit</button>
            </form>
        </div>
    </div>
    
    <!-- Profile Modal -->
    <div class="profile-modal" id="profile-modal" style="display: none;">
        <div class="profile-box">
            <div class="profile-header">
                <h2 class="profile-title">User Profile</h2>
                <div class="close-profile" id="close-profile">
                    <i class="fas fa-times"></i>
                </div>
            </div>
            
            <div class="profile-info">
                <div class="info-item">
                    <span>Username:</span>
                    <span id="profile-username">Guest</span>
                </div>
                <div class="info-item">
                    <span>Email:</span>
                    <span id="profile-email">guest@example.com</span>
                </div>
                <div class="info-item">
                    <span>Mobile:</span>
                    <span id="profile-mobile">03XX-XXXXXXX</span>
                </div>
                <div class="info-item">
                    <span>Account Balance:</span>
                    <span id="profile-balance">0.00 PKR</span>
                </div>
                <div class="info-item">
                    <span>Member Since:</span>
                    <span id="profile-joined">2023-01-01</span>
                </div>
            </div>
            
            <h3 class="panel-title"><i class="fas fa-history"></i> Withdrawal History</h3>
            <div class="withdraw-history">
                <div class="history-header">
                    <span>Date</span>
                    <span>Amount</span>
                    <span>Status</span>
                </div>
                <div id="withdraw-history-items">
                    <!-- Withdraw history will be added dynamically -->
                </div>
            </div>
        </div>
    </div>
    
    <footer class="footer">
        <p>© 2023 Aviator Game - For entertainment purposes only. Play responsibly.</p>
    </footer>
    
    <script>
        // Game state
        let gameActive = false;
        let currentMultiplier = 1.00;
        let multiplierSpeed = 0.02;
        let gameInterval;
        let currentBet = 0;
        let balance = 0.00;
        let cashOutMultiplier = 0;
        let highestWin = 0.00;
        let totalBets = 0;
        let totalWins = 0;
        let direction = 1; // 1 for up, -1 for down
        let currentUser = null;
        let withdrawHistory = [];
        
        // DOM Elements
        const multiplierDisplay = document.getElementById('multiplier');
        const airplane = document.getElementById('airplane');
        const placeBetBtn = document.getElementById('place-bet');
        const cashOutBtn = document.getElementById('cash-out');
        const betAmountInput = document.getElementById('bet-amount');
        const balanceDisplay = document.getElementById('balance-amount');
        const gameBalanceDisplay = document.getElementById('game-balance');
        const authModal = document.getElementById('auth-modal');
        const loginBtn = document.getElementById('login-btn');
        const closeAuth = document.getElementById('close-auth');
        const loginTab = document.getElementById('login-tab');
        const signupTab = document.getElementById('signup-tab');
        const loginForm = document.getElementById('login-form');
        const signupForm = document.getElementById('signup-form');
        const qrModal = document.getElementById('qr-modal');
        const jazzcashBtn = document.getElementById('jazzcash-btn');
        const easypaisaBtn = document.getElementById('easypaisa-btn');
        const walletBtn = document.getElementById('wallet-btn');
        const verifyModal = document.getElementById('verify-modal');
        const verifyForm = document.getElementById('verify-form');
        const paymentMethodInput = document.getElementById('payment-method');
        const highestWinDisplay = document.getElementById('highest-win');
        const totalBetsDisplay = document.getElementById('total-bets');
        const totalWinsDisplay = document.getElementById('total-wins');
        const winRateDisplay = document.getElementById('win-rate');
        const historyItems = document.getElementById('history-items');
        const withdrawForm = document.getElementById('withdraw-form');
        const shareQrBtn = document.getElementById('share-qr');
        const userProfile = document.getElementById('user-profile');
        const usernameDisplay = document.getElementById('username-display');
        const profileModal = document.getElementById('profile-modal');
        const closeProfile = document.getElementById('close-profile');
        const profileUsername = document.getElementById('profile-username');
        const profileEmail = document.getElementById('profile-email');
        const profileMobile = document.getElementById('profile-mobile');
        const profileBalance = document.getElementById('profile-balance');
        const profileJoined = document.getElementById('profile-joined');
        const withdrawHistoryItems = document.getElementById('withdraw-history-items');
        
        // Initialize game canvas
        function initGameCanvas() {
            const canvas = document.getElementById('game-canvas');
            // Create clouds
            for (let i = 0; i < 5; i++) {
                const cloud = document.createElement('div');
                cloud.classList.add('cloud');
                cloud.style.width = Math.random() * 80 + 40 + 'px';
                cloud.style.height = Math.random() * 40 + 20 + 'px';
                cloud.style.top = Math.random() * 80 + 10 + '%';
                cloud.style.left = Math.random() * 100 + '%';
                canvas.appendChild(cloud);
            }
        }
        
        // Start the game
        function startGame() {
            const betAmount = parseFloat(betAmountInput.value);
            
            if (isNaN(betAmount)) {
                alert('Please enter a valid bet amount!');
                return;
            }
            
            if (betAmount > balance) {
                alert('You don\'t have enough balance!');
                return;
            }
            
            if (betAmount <= 0) {
                alert('Bet amount must be greater than zero!');
                return;
            }
            
            // Deduct bet from balance
            currentBet = betAmount;
            balance -= currentBet;
            updateBalance();
            
            // Reset game state
            gameActive = true;
            currentMultiplier = 1.00;
            cashOutMultiplier = 0;
            multiplierSpeed = 0.02;
            direction = 1;
            multiplierDisplay.textContent = currentMultiplier.toFixed(2) + 'x';
            multiplierDisplay.style.color = '#ffffff';
            airplane.style.bottom = '30px';
            airplane.style.left = '50px';
            airplane.style.transform = 'rotate(0deg)';
            
            // Update stats
            totalBets++;
            totalBetsDisplay.textContent = totalBets;
            updateWinRate();
            
            // Show cash out button
            cashOutBtn.style.display = 'block';
            placeBetBtn.disabled = true;
            betAmountInput.disabled = true;
            
            // Start game loop
            gameInterval = setInterval(updateGame, 50);
        }
        
        // Update game state
        function updateGame() {
            // Change direction randomly
            if (Math.random() < 0.01) {
                direction *= -1;
            }
            
            // Increase multiplier
            currentMultiplier += multiplierSpeed * direction;
            
            // Ensure multiplier doesn't go below 1.00
            if (currentMultiplier < 1.00) {
                currentMultiplier = 1.00;
                direction = 1;
            }
            
            // Increase speed over time
            multiplierSpeed *= 1.001;
            
            // Update display
            multiplierDisplay.textContent = currentMultiplier.toFixed(2) + 'x';
            
            // Move airplane
            const newBottom = 30 + (currentMultiplier * 2 * direction);
            const newLeft = 50 + (currentMultiplier * 4);
            const rotation = Math.min(currentMultiplier * 3 * direction, 30);
            
            airplane.style.bottom = newBottom + 'px';
            airplane.style.left = newLeft + 'px';
            airplane.style.transform = `rotate(${rotation}deg)`;
            
            // Create trail effect
            if (currentMultiplier % 0.5 < 0.1) {
                createTrail();
            }
            
            // Random crash (higher chance as multiplier increases)
            const crashChance = Math.min(0.5 * (currentMultiplier - 1), 0.25);
            if (Math.random() < crashChance) {
                endGame(false);
            }
        }
        
        // Create airplane trail
        function createTrail() {
            const trail = document.createElement('div');
            trail.classList.add('trail');
            trail.style.width = '100px';
            trail.style.left = (parseInt(airplane.style.left) - 50) + 'px';
            trail.style.bottom = (parseInt(airplane.style.bottom) + 25) + 'px';
            
            document.getElementById('game-canvas').appendChild(trail);
            
            // Fade out trail
            setTimeout(() => {
                trail.style.opacity = '0';
                trail.style.transition = 'opacity 1s';
            }, 100);
            
            // Remove trail after animation
            setTimeout(() => {
                trail.remove();
            }, 1100);
        }
        
        // Cash out
        function cashOut() {
            if (!gameActive) return;
            
            cashOutMultiplier = currentMultiplier;
            endGame(true);
        }
        
        // End game
        function endGame(isCashOut) {
            clearInterval(gameInterval);
            gameActive = false;
            
            // Calculate winnings
            let winnings = 0;
            if (isCashOut) {
                winnings = currentBet * cashOutMultiplier;
                multiplierDisplay.textContent = cashOutMultiplier.toFixed(2) + 'x CASHOUT!';
                multiplierDisplay.style.color = '#00c853';
                
                // Update stats
                totalWins++;
                if (cashOutMultiplier > highestWin) {
                    highestWin = cashOutMultiplier;
                    highestWinDisplay.textContent = highestWin.toFixed(2) + 'x';
                }
                updateWinRate();
                
                // Add to history
                addToHistory(cashOutMultiplier, true);
                
                // Add confetti effect for win
                createConfetti();
            } else {
                multiplierDisplay.textContent = 'CRASHED!';
                multiplierDisplay.style.color = '#ff3d00';
                
                // Add to history
                addToHistory(0, false);
            }
            
            // Update balance
            balance += winnings;
            updateBalance();
            
            // Reset UI
            setTimeout(() => {
                cashOutBtn.style.display = 'none';
                placeBetBtn.disabled = false;
                betAmountInput.disabled = false;
            }, 3000);
        }
        
        // Add game to history
        function addToHistory(multiplier, isWin) {
            const historyItem = document.createElement('div');
            historyItem.classList.add('history-item');
            
            const gameNumber = document.createElement('span');
            gameNumber.textContent = `Game #${totalBets}`;
            
            const result = document.createElement('span');
            result.textContent = isWin ? `${multiplier.toFixed(2)}x Win` : '0.00x Loss';
            result.classList.add(isWin ? 'win' : 'loss');
            
            historyItem.appendChild(gameNumber);
            historyItem.appendChild(result);
            
            // Add to beginning of history
            historyItems.insertBefore(historyItem, historyItems.firstChild);
            
            // Limit history to 10 items
            if (historyItems.children.length > 10) {
                historyItems.removeChild(historyItems.lastChild);
            }
        }
        
        // Update win rate
        function updateWinRate() {
            if (totalBets === 0) return;
            const winRate = Math.round((totalWins / totalBets) * 100);
            winRateDisplay.textContent = `${winRate}%`;
        }
        
        // Create confetti effect
        function createConfetti() {
            const canvas = document.getElementById('game-canvas');
            const colors = ['#ffcc00', '#ff9900', '#00c853', '#2196f3', '#9c27b0'];
            
            for (let i = 0; i < 50; i++) {
                const confetti = document.createElement('div');
                confetti.classList.add('confetti');
                confetti.style.width = Math.random() * 10 + 5 + 'px';
                confetti.style.height = Math.random() * 10 + 5 + 'px';
                confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
                confetti.style.position = 'absolute';
                confetti.style.left = Math.random() * 100 + '%';
                confetti.style.top = '0';
                confetti.style.borderRadius = '2px';
                canvas.appendChild(confetti);
                
                // Animate confetti
                const animation = confetti.animate([
                    { transform: 'translateY(0) rotate(0deg)', opacity: 1 },
                    { transform: `translateY(${Math.random() * 200 + 100}px) rotate(${Math.random() * 360}deg)`, opacity: 0 }
                ], {
                    duration: Math.random() * 2000 + 1000,
                    easing: 'cubic-bezier(0,0,0.2,1)'
                });
                
                // Remove after animation
                animation.onfinish = () => confetti.remove();
            }
        }
        
        // Update balance display
        function updateBalance() {
            balanceDisplay.textContent = balance.toFixed(2);
            gameBalanceDisplay.textContent = balance.toFixed(2);
            if (currentUser) {
                profileBalance.textContent = balance.toFixed(2) + ' PKR';
            }
        }
        
        // Update user profile
        function updateUserProfile(user) {
            currentUser = user;
            usernameDisplay.textContent = user.username;
            profileUsername.textContent = user.username;
            profileEmail.textContent = user.email;
            profileMobile.textContent = user.mobile;
            profileJoined.textContent = user.joined;
            profileBalance.textContent = balance.toFixed(2) + ' PKR';
            
            // Show profile, hide login button
            userProfile.style.display = 'flex';
            loginBtn.style.display = 'none';
        }
        
        // Add to withdraw history
        function addToWithdrawHistory(amount, status) {
            const now = new Date();
            const dateStr = now.toLocaleDateString();
            const timeStr = now.toLocaleTimeString();
            
            const withdrawItem = {
                date: `${dateStr} ${timeStr}`,
                amount: amount,
                status: status
            };
            
            withdrawHistory.unshift(withdrawItem);
            updateWithdrawHistoryDisplay();
        }
        
        // Update withdraw history display
        function updateWithdrawHistoryDisplay() {
            withdrawHistoryItems.innerHTML = '';
            
            for (const item of withdrawHistory) {
                const historyItem = document.createElement('div');
                historyItem.classList.add('withdraw-item');
                
                const dateSpan = document.createElement('span');
                dateSpan.textContent = item.date;
                
                const amountSpan = document.createElement('span');
                amountSpan.textContent = `${item.amount.toFixed(2)} PKR`;
                
                const statusSpan = document.createElement('span');
                statusSpan.textContent = item.status;
                statusSpan.classList.add(item.status === 'Completed' ? 'completed' : 'pending');
                
                historyItem.appendChild(dateSpan);
                historyItem.appendChild(amountSpan);
                historyItem.appendChild(statusSpan);
                
                withdrawHistoryItems.appendChild(historyItem);
            }
        }
        
        // Auth modal functions
        function showLoginModal() {
            authModal.style.display = 'flex';
        }
        
        function closeLoginModal() {
            authModal.style.display = 'none';
        }
        
        function switchToLogin() {
            loginForm.style.display = 'flex';
            signupForm.style.display = 'none';
            loginTab.classList.add('active');
            signupTab.classList.remove('active');
        }
        
        function switchToSignup() {
            loginForm.style.display = 'none';
            signupForm.style.display = 'flex';
            loginTab.classList.remove('active');
            signupTab.classList.add('active');
        }
        
        // Show QR modal
        function showQrModal() {
            qrModal.style.display = 'flex';
        }
        
        // Show verify modal
        function showVerifyModal() {
            verifyModal.style.display = 'flex';
        }
        
        // Show profile modal
        function showProfileModal() {
            profileModal.style.display = 'flex';
            updateWithdrawHistoryDisplay();
        }
        
        // Close modals
        function closeModals() {
            qrModal.style.display = 'none';
            verifyModal.style.display = 'none';
            profileModal.style.display = 'none';
        }
        
        // Event Listeners
        placeBetBtn.addEventListener('click', startGame);
        cashOutBtn.addEventListener('click', cashOut);
        loginBtn.addEventListener('click', showLoginModal);
        closeAuth.addEventListener('click', closeLoginModal);
        loginTab.addEventListener('click', switchToLogin);
        signupTab.addEventListener('click', switchToSignup);
        userProfile.addEventListener('click', showProfileModal);
        closeProfile.addEventListener('click', closeModals);
        
        // Payment option click handlers
        jazzcashBtn.addEventListener('click', showQrModal);
        easypaisaBtn.addEventListener('click', () => {
            paymentMethodInput.value = 'EasyPaisa';
            showVerifyModal();
        });
        walletBtn.addEventListener('click', () => {
            paymentMethodInput.value = 'Wallet';
            showVerifyModal();
        });
        
        // Share QR button
        shareQrBtn.addEventListener('click', () => {
            alert('QR sharing functionality would be implemented in a real application');
        });
        
        // Form submission handlers
        loginForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const username = document.getElementById('username').value;
            
            // Create user object
            const user = {
                username: username,
                email: `${username}@example.com`,
                mobile: '0312-3456789',
                joined: new Date().toLocaleDateString()
            };
            
            balance = 500.00; // Demo balance for logged in user
            updateBalance();
            updateUserProfile(user);
            closeLoginModal();
            alert('Login successful! You have been credited with 500 PKR demo balance.');
        });
        
        signupForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const username = document.getElementById('signup-username').value;
            const email = document.getElementById('signup-email').value;
            const mobile = document.getElementById('signup-mobile').value;
            
            // Create user object
            const user = {
                username: username,
                email: email,
                mobile: mobile,
                joined: new Date().toLocaleDateString()
            };
            
            balance = 1000.00; // Bonus for new users
            updateBalance();
            updateUserProfile(user);
            closeLoginModal();
            alert('Account created successfully! Welcome bonus of 1000 PKR has been added to your account.');
        });
        
        verifyForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const amount = parseFloat(document.getElementById('deposit-amount').value);
            if (amount && amount > 0) {
                balance += amount;
                updateBalance();
                closeModals();
                alert(`Deposit of ${amount.toFixed(2)} PKR verified successfully!`);
            } else {
                alert('Please enter a valid deposit amount!');
            }
        });
        
        withdrawForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const amount = parseFloat(document.getElementById('withdraw-amount').value);
            const fullName = document.getElementById('full-name').value;
            const account = document.getElementById('account-number').value;
            const cnic = document.getElementById('cnic-number').value;
            
            if (amount > balance) {
                alert('Insufficient balance for withdrawal!');
                return;
            }
            
            if (amount <= 0) {
                alert('Withdrawal amount must be greater than zero!');
                return;
            }
            
            balance -= amount;
            updateBalance();
            
            // Add to withdrawal history
            addToWithdrawHistory(amount, 'Pending');
            
            alert(`Withdrawal request for ${amount.toFixed(2)} PKR submitted!\nName: ${fullName}\nAccount: ${account}\nCNIC: ${cnic}`);
            
            // Reset form
            withdrawForm.reset();
        });
        
        // Close modals when clicking outside
        window.addEventListener('click', (e) => {
            if (e.target === qrModal) closeModals();
            if (e.target === verifyModal) closeModals();
            if (e.target === profileModal) closeModals();
        });
        
        // Initialize the game
        window.onload = initGameCanvas;
        
        // Add sample withdrawal history
        addToWithdrawHistory(500.00, 'Completed');
        addToWithdrawHistory(1000.00, 'Completed');
        addToWithdrawHistory(750.00, 'Pending');
    </script>
</body>
</html> THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
